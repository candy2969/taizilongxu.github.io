<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

    <title>Hackerxu's Blog</title>
    <subtitle>Python,HTML,CSS,Machine Leaning</subtitle>
    <link href="http://hackerxu.com/atom.xml" rel="self"/>
    <link href="http://hackerxu.com"/>
    <updated>2014-10-09T19:48:34+08:00</updated>
    <id>http://hackerxu.com</id>
    <author>
        <name>xuxiao</name>
    </author>
    
    <entry>
        <title>Python subprocess模块总结</title>
        <link href="http://hackerxu.com/2014/10/09/subprocess.html"/>
        <updated>2014-10-09T00:00:00+08:00</updated>
        <id>http://hackerxu.com/2014/10/09/subprocess</id>
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;subprocess意在替代其他几个老的模块或者函数，比如：os.system os.spawn* os.popen* popen2.* commands.*&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;subprocess最简单的用法就是调用shell命令了,另外也可以调用程序,并且可以通过stdout,stdin和stderr进行交互&lt;/p&gt;

&lt;h4&gt;subprocess的主类&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Popen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
      &lt;span class=&quot;n&quot;&gt;bufsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
      &lt;span class=&quot;n&quot;&gt;executable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
      &lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
      &lt;span class=&quot;n&quot;&gt;preexec_fn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
      &lt;span class=&quot;n&quot;&gt;close_fds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
      &lt;span class=&quot;n&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
      &lt;span class=&quot;n&quot;&gt;cwd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
      &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
      &lt;span class=&quot;n&quot;&gt;universal_newlines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
      &lt;span class=&quot;n&quot;&gt;startupinfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
      &lt;span class=&quot;n&quot;&gt;creationflags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;args可以是字符串或者序列类型（如：list，元组），用于指定进程的可执行文件及其参数。如果是序列类型，第一个元素通常是可执行文件的路径。我们也可以显式的使用executeable参数来指定可执行文件的路径。&lt;/li&gt;
&lt;li&gt;bufsize：指定缓冲。0 无缓冲,1 行缓冲,其他 缓冲区大小,负值 系统缓冲(全缓冲)&lt;/li&gt;
&lt;li&gt;stdin, stdout, stderr分别表示程序的标准输入、输出、错误句柄。他们可以是PIPE，文件描述符或文件对象，也可以设置为None，表示从父进程继承。&lt;/li&gt;
&lt;li&gt;preexec_fn只在Unix平台下有效，用于指定一个可执行对象（callable object），它将在子进程运行之前被调用。&lt;/li&gt;
&lt;li&gt;Close_sfs：在windows平台下，如果close_fds被设置为True，则新创建的子进程将不会继承父进程的输入、输出、错误管道。我们不能将close_fds设置为True同时重定向子进程的标准输入、输出与错误(stdin, stdout, stderr)。&lt;/li&gt;
&lt;li&gt;shell设为true，程序将通过shell来执行。&lt;/li&gt;
&lt;li&gt;cwd用于设置子进程的当前目录&lt;/li&gt;
&lt;li&gt;env是字典类型，用于指定子进程的环境变量。如果env = None，子进程的环境变量将从父进程中继承。&lt;/li&gt;
&lt;li&gt;Universal_newlines:不同操作系统下，文本的换行符是不一样的。如：windows下用&amp;#39;/r/n&amp;#39;表示换，而Linux下用&amp;#39;/n&amp;#39;。如果将此参数设置为True，Python统一把这些换行符当作&amp;#39;/n&amp;#39;来处理。startupinfo与createionflags只在windows下用效，它们将被传递给底层的CreateProcess()函数，用于设置子进程的一些属性，如：主窗口的外观，进程的优先级等等。 &lt;/li&gt;
&lt;li&gt;startupinfo与createionflags只在windows下有效，它们将被传递给底层的CreateProcess()函数，用于设置子进程的一些属性，如：主窗口的外观，进程的优先级等等。 &lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Popen方法&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Popen.poll()：用于检查子进程是否已经结束。设置并返回returncode属性。&lt;/li&gt;
&lt;li&gt;Popen.wait()：等待子进程结束。设置并返回returncode属性。&lt;/li&gt;
&lt;li&gt;Popen.communicate(input=None)：与子进程进行交互。向stdin发送数据，或从stdout和stderr中读取数据。可选参数input指定发送到子进程的参数。Communicate()返回一个元组：(stdoutdata, stderrdata)。注意：如果希望通过进程的stdin向其发送数据，在创建Popen对象的时候，参数stdin必须被设置为PIPE。同样，如果希望从stdout和stderr获取数据，必须将stdout和stderr设置为PIPE。&lt;/li&gt;
&lt;li&gt;Popen.send_signal(signal)：向子进程发送信号。&lt;/li&gt;
&lt;li&gt;Popen.terminate()：停止(stop)子进程。在windows平台下，该方法将调用Windows API TerminateProcess（）来结束子进程。&lt;/li&gt;
&lt;li&gt;Popen.kill()：杀死子进程。&lt;/li&gt;
&lt;li&gt;Popen.stdin：如果在创建Popen对象是，参数stdin被设置为PIPE，Popen.stdin将返回一个文件对象用于策子进程发送指令。否则返回None。&lt;/li&gt;
&lt;li&gt;Popen.stdout：如果在创建Popen对象是，参数stdout被设置为PIPE，Popen.stdout将返回一个文件对象用于策子进程发送指令。否则返回None。&lt;/li&gt;
&lt;li&gt;Popen.stderr：如果在创建Popen对象是，参数stdout被设置为PIPE，Popen.stdout将返回一个文件对象用于策子进程发送指令。否则返回None。&lt;/li&gt;
&lt;li&gt;Popen.pid：获取子进程的进程ID。&lt;/li&gt;
&lt;li&gt;Popen.returncode：获取进程的返回值。如果进程还没有结束，返回None。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;subprocess.call(*popenargs, **kwargs)&lt;/code&gt;：运行命令。该函数将一直等待到子进程运行结束，并返回进程的returncode。文章一开始的例子就演示了call函数。如果子进程不需要进行交互,就可以使用该函数来创建。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;subprocess.check_call(*popenargs, **kwargs)&lt;/code&gt;：与&lt;code&gt;subprocess.call(*popenargs, **kwargs)&lt;/code&gt;功能一样，只是如果子进程返回的returncode不为0的话，将触发CalledProcessError异常。在异常对象中，包括进程的returncode信息。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;以上全是抄的&lt;/p&gt;

&lt;h4&gt;在程序中运行其他程序或shell&lt;/h4&gt;

&lt;p&gt;可以这样写&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;subprocess.Popen(&amp;#39;脚本/shell&amp;#39;, shell=True)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;也可以这样&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;subprocess.call(&amp;#39;脚本/shell&amp;#39;, shell=True)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;两者的区别是前者无阻塞,会和主程序并行运行,后者必须等待命令执行完毕,如果想要前者编程阻塞可以这样&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;s = subprocess.Popen(&amp;#39;脚本/shell&amp;#39;, shell=True)
s.wait()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;程序返回运行结果&lt;/h4&gt;

&lt;p&gt;有时候我们需要程序的返回结果,可以这样做&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;gt;&amp;gt;&amp;gt; s = subprocess.Popen(&amp;#39;ls -l&amp;#39;, shell=True, stdout=subprocess.PIPE) 
&amp;gt;&amp;gt;&amp;gt; s.communicate() 
(&amp;#39;\xe6\x80\xbb\xe7\x94\xa8\xe9\x87\x8f 152\n-rw------- 1 limbo limbo   808  7\xe6\x9c\x88  6 17:46 0000-00-00-welcome-to-jekyll.markdown.erb\ndrwx------ 2 limbo limbo  4096  8\xe6\x9c\x88 15 18:43 arg\ndrwx------ 2 limbo limbo  4096  8\xe6\x9c\x88  7 17:37 argv\ndrwxrwxr-x 2 limbo limbo  4096  9\xe6\x9c\x88 10 15:27 c\ndrwxrwxr-x 3 limbo limbo  4096  9\xe6\x9c\x88 11 14:35 d3\ndrwxrwxr-x 3 limbo limbo  4096  9\xe6\x9n&amp;#39;, None)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;它会返回一个元组：(stdoutdata, stderrdata)&lt;/p&gt;

&lt;p&gt;subprocess还有另一种更简单方法,效果一样,它会返回stdout&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;gt;&amp;gt;&amp;gt; s = subprocess.check_output(&amp;#39;ls -l&amp;#39;, shell=True)
&amp;gt;&amp;gt;&amp;gt; s
&amp;#39;\xe6\x80\xbb\xe7\x94\xa8\xe9\x87\x8f 152\n-rw------- 1 limbo limbo   808  7\xe6\x9c\x88  6 17:46 0000-00-00-welcome-to-jekyll.markdown.erb\ndrwx------ 2 limbo limbo  4096  8\xe6\x9c\x88 15 18:43 arg\ndrwx------ 2 limbo limbo  4096  8\xe6\x9c\x88  7 17:37 argv\ndrwxrwxr-x 2 limbo limbo  4096  9\xe6\x9c\x88 10 15:27 c\ndrwxrwxr-x 3 limbo limbo  4096  9\xe6\x9c\x88 11 14:35 d3\ndrwxrwxr-x 3 limbo limbo  4096  9\xe6\x9n&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;前者可以实现更多的交互,如stderr和stdin,但是在前面调用Popen的时候要实现定义&lt;code&gt;Popen(stdin=subprocess.PIPE, stderr=subprocess)&lt;/code&gt;&lt;/p&gt;

&lt;h4&gt;给子进程输入&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;subprocess&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;child&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Popen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;cat&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PIPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;communicate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;vamei&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;()不为空，则写入subprocess.PIPE，为空，则从subprocess.PIPE读取&lt;/p&gt;

&lt;h4&gt;subprocess.PIPE&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;subprocess&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;child1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Popen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;ls&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;-l&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PIPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;child2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Popen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wc&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;child1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PIPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;child2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;communicate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;实际上是这样的过程&lt;/p&gt;

&lt;p&gt;child1.stdout--&amp;gt;subprocess.PIPE&lt;/p&gt;

&lt;p&gt;child2.stdin&amp;lt;--subprocess.PIPE&lt;/p&gt;

&lt;p&gt;child2.stdout--&amp;gt;subprocess.PIPE&lt;/p&gt;

&lt;p&gt;要注意的是，communicate()是Popen对象的一个方法，该方法会阻塞父进程，直到子进程完成。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;subprocess.PIPE实际上为文本流提供一个缓存区。直到communicate()方法从PIPE中读取出PIPE中的文本.要注意的是，communicate()是Popen对象的一个方法，该方法会阻塞父进程，直到子进程完成。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;参考资料&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/jgood/article/details/4498166&quot;&gt;http://blog.csdn.net/jgood/article/details/4498166&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/GODYCA/archive/2013/05/08/3066870.html&quot;&gt;http://www.cnblogs.com/GODYCA/archive/2013/05/08/3066870.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/imzoer/article/details/8678029&quot;&gt;http://blog.csdn.net/imzoer/article/details/8678029&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ipseek.blog.51cto.com/1041109/807513&quot;&gt;http://ipseek.blog.51cto.com/1041109/807513&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jb51.net/article/48086.htm&quot;&gt;http://www.jb51.net/article/48086.htm&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    </entry>
    
    <entry>
        <title>把程序打包上传到PyPi版本库中</title>
        <link href="http://hackerxu.com/2014/10/08/Pypi.html"/>
        <updated>2014-10-08T00:00:00+08:00</updated>
        <id>http://hackerxu.com/2014/10/08/Pypi</id>
        <content type="html">&lt;h4&gt;1 首先必须要按照以下文件结构&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;err&quot;&gt;├──&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;douban&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;│  &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;├──&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cli&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;│  &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;├──&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;douban&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;│  &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;├──&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;douban_token&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;│  &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;├──&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;│  &lt;/span&gt; &lt;span class=&quot;err&quot;&gt;└──&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;├──&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;README&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;md&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;└──&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;必须至少一个包,即上面的douban,把模块都放在包下,且包中必须有&lt;code&gt;__init__.py&lt;/code&gt;文件(可以为空)&lt;/li&gt;
&lt;li&gt;必须有一个setup.py文件&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;2 setup.py文件&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;#-*- encoding: UTF-8 -*-&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;setuptools&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find_packages&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;打包的用的setup必须引入&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;VERSION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;0.2.0&amp;#39;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;README.md&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;long_description&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;douban.fm&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 文件名&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 版本(每次更新上传Pypi需要修改)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;a tiny and smart cli player of douban.fm based on Python&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;long_description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;long_description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 放README.md文件,方便在Pypi页展示&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;classifiers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Get strings from http://pypi.python.org/pypi?%3Aaction=list_classifiers&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;keywords&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;python douban douban.fm terminal&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 关键字&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;taizilongxu&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 用户名&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;author_email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;468137306@qq.com&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 邮箱&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;https://github.com/taizilongxu/douban.fm&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# github上的地址,别的地址也可以&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;license&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;MIT&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 遵循的协议&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;packages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;douban&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 发布的包名&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;include_package_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;zip_safe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;install_requires&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&amp;#39;termcolor&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 满足的依赖&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;entry_points&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&amp;#39;console_scripts&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&amp;#39;douban.fm = douban.douban:main&amp;#39;&lt;/span&gt; 
        &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt; entry_points : [可执行程序名]=引入的包名.子包名.模块名:入口函数.这个要注意了,主程序要引入main函数进行执行.好让包找到执行的位置&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;3 安装&lt;/h4&gt;

&lt;p&gt;如果不上传文件,只在本机中安装,那么可以运行以下命令&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;python setup.py install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样就在本机安装了程序,在shell中输入douban.fm(刚才在entry_points中输入的可执行程序名),就可以执行了&lt;/p&gt;

&lt;h4&gt;4 上传到Pypi&lt;/h4&gt;

&lt;p&gt;先在 &lt;a href=&quot;https://pypi.python.org/pypi&quot;&gt;https://pypi.python.org/pypi&lt;/a&gt; 注册个Pypi号,认证邮箱.&lt;/p&gt;

&lt;p&gt;然后再在你的用户目录下新建一个&lt;code&gt;.pypirc&lt;/code&gt;文件,输入如下:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[distutils]
index-servers =
    pypi

[pypi]
username:
password:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;把username和password填上保存就可以了&lt;/p&gt;

&lt;p&gt;回到你的setup.py目录,输入如下命令&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo python setup.py register sdist bdist_egg upload
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;你的包就可以发到Pypi里了,通过pip或者easy_install就可以下载你的包了&lt;/p&gt;

&lt;h4&gt;5 更新Pypi包&lt;/h4&gt;

&lt;p&gt;当包版本更新后,需要在你的setup.py文件里修改VERSION,然后运行第4部的命令就可以了(如果不更新VERSION包就不能上传成功)&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title>douban.fm 终端命令行豆瓣FM</title>
        <link href="http://hackerxu.com/2014/10/07/doubanfm.html"/>
        <updated>2014-10-07T00:00:00+08:00</updated>
        <id>http://hackerxu.com/2014/10/07/doubanfm</id>
        <content type="html">&lt;p&gt;项目地址 &lt;a href=&quot;https://github.com/taizilongxu/douban.fm&quot;&gt;https://github.com/taizilongxu/douban.fm&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;douban.fm  &lt;a href=&quot;http://badge.fury.io/py/douban.fm&quot;&gt;&lt;img src=&quot;https://badge.fury.io/py/douban.fm.svg&quot; alt=&quot;PyPI version&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;ubuntu通过测试,其他平台暂时未做测试.&lt;/p&gt;

&lt;p&gt;这个版本的命令行界面是参考了 Node.js版本的&lt;a href=&quot;https://github.com/turingou/douban.fm&quot;&gt;douban.fm&lt;/a&gt;制作的.&lt;/p&gt;

&lt;p&gt;Python版本&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/taizilongxu/douban.fm/master/img/2.png&quot; alt=&quot;screenshot&quot;&gt;&lt;/p&gt;

&lt;h3&gt;为什么Python版本&lt;/h3&gt;

&lt;p&gt;其实Node.js版本已经很好了,功能齐全,但是我发现在我的zsh + tmux环境下颜色竟然显示不出来,感觉很蛋疼.&lt;/p&gt;

&lt;h3&gt;安装&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo pip install douban.fm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;需要mplayer播放器依赖,如未安装:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install mplayer
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;使用&lt;/h3&gt;

&lt;p&gt;在终端下直接输入douban.fm&lt;/p&gt;

&lt;h3&gt;登陆&lt;/h3&gt;

&lt;p&gt;第一次登陆需要输入账号,密码,程序不会保留密码,而是保存返回的token存储在.douban_token.txt,下次登陆无需输入密码.&lt;/p&gt;

&lt;h3&gt;按键&lt;/h3&gt;

&lt;p&gt;支持vim按键&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;j 下&lt;/li&gt;
&lt;li&gt;k 上&lt;/li&gt;
&lt;li&gt;g 移到最顶&lt;/li&gt;
&lt;li&gt;G 移到最底&lt;/li&gt;
&lt;li&gt;n 下一首&lt;/li&gt;
&lt;li&gt;r 喜欢/取消喜欢&lt;/li&gt;
&lt;li&gt;b 不再播放&lt;/li&gt;
&lt;li&gt;space 播放&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;已完成功能&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;登陆token&lt;/li&gt;
&lt;li&gt;显示PRO 暂时只支持最高128kbps&lt;/li&gt;
&lt;li&gt;cli设计&lt;/li&gt;
&lt;li&gt;播放,下一首,红心,不再播放&lt;/li&gt;
&lt;li&gt;进度条&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;TODO&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;歌曲暂停&lt;/li&gt;
&lt;li&gt;歌曲结束request(记录歌曲播放数)&lt;/li&gt;
&lt;li&gt;播放歌曲数 红心数 不再播放数&lt;/li&gt;
&lt;li&gt;歌词&lt;/li&gt;
&lt;li&gt;终端高度的自动调整&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;BUG&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;del&gt;播放歌曲中有时候会暂停&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;退出后终端光标会隐藏&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;参考资料&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Node.js版本的&lt;a href=&quot;https://github.com/turingou/douban.fm&quot;&gt;douban.fm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zonyitoo/doubanfm-qt/wiki/%E8%B1%86%E7%93%A3FM-API&quot;&gt;豆瓣电台 API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </entry>
    
    <entry>
        <title>Douban Fm 之多进程,多线程</title>
        <link href="http://hackerxu.com/2014/10/01/DoubanFm-threading.html"/>
        <updated>2014-10-01T00:00:00+08:00</updated>
        <id>http://hackerxu.com/2014/10/01/DoubanFm-threading</id>
        <content type="html">&lt;p&gt;最近Python版本的Douban Fm制作接近尾声,不过困扰我的有一个最大的难题,那就是前台界面和后台程序的融合.&lt;/p&gt;

&lt;p&gt;在以前的编程中虽然语言是面向对象的,但程序的设计主旨一般都还是面向过程的,也就是说平常的程序设计中从来没考虑过进程,线程,以及他们之间的通信.虽然操作系统中对线程,进程都有所了解,但是一想到的是系统编程里的就望而却步了.这会终于好好的研究了一下进程编程,稍后会写笔记,先写写Douban Fm碰到的问题.&lt;/p&gt;

&lt;p&gt;没错,就是线程,进程的问题,当你设计一个cli样式的界面,而且还需要有进程在后端运行,那么你一定需要多线程或是多进程的.在Python里最最原始的方法有一个fork()方法,相信这个方法是从linux中继承过来的,不过这种方法既难掌握,又非常的混乱,比如我们有一个while循环的话,那么在其中的fork()就是一个灾难了.&lt;/p&gt;

&lt;p&gt;相对比较高级的一个方法是multiprocessing,这个函数可以创建一个进程,如下:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;multiprocessing&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;multiprocessing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fun&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,))&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 注意函数没有括号&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个函数允许你创建一个进程,运行在主程序之外,当然可以和主程序进行一些交互.&lt;/p&gt;

&lt;p&gt;另外一个比较高级的方法是subprocess,这是一个非常重要的函数,相信大多数人已经知道啦,这个函数最主要的就是调用一个外部程序或者shell里的命令,可以用阻塞的方式调用(subprocess.call()),也可以用非阻塞的方式(subprocess.Popen())&lt;/p&gt;

&lt;p&gt;程序中遇到的问题是这样的,cli界面是主程序,用一个while循环去抓取按键,当空格的时候就会播放选中频道的歌曲,然而如果用subprocess调用mplayer播放器,只能播放一首,第二首就会停止,怎么办?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;把播放歌曲封装进一个函数,当做一个进程,在进程里无线循环调用歌曲,不停的播放,而界面程序会当做另一个进程监控按键&lt;/li&gt;
&lt;li&gt;创建一个守护进程或者守护线程不停的监听subprocess的状态,如运行完成则立刻进行反应&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;最后我还是选了2,因为2比较简单,1需要的交互太多,比较麻烦&lt;/p&gt;

&lt;p&gt;下面这个程序是个实验小程序,用一个守护进程去监听mplayer,如果播放完毕则重新启用mplayer,无限循环的过程&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;#-*- encoding: UTF-8 -*-&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#---------------------------------import------------------------------------&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;subprocess&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;threading&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#---------------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Popen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;mplayer ~/01\ 21\ Guns\ \(feat.\ The\ Cast\ of\ _Ameri.m4a  &amp;gt;/dev/null 2&amp;gt;&amp;amp;1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;protect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# time.sleep(1)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;poll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;returncode:&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;returncode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;returncode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Popen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;mplayer ~/01\ 21\ Guns\ \(feat.\ The\ Cast\ of\ _Ameri.m4a  &amp;gt;/dev/null 2&amp;gt;&amp;amp;1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threading&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;protect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;protect&amp;#39;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;############################################################################&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </entry>
    
    <entry>
        <title>Aaron Swartz</title>
        <link href="http://hackerxu.com/2014/09/20/Aaron-Swartz.html"/>
        <updated>2014-09-20T00:00:00+08:00</updated>
        <id>http://hackerxu.com/2014/09/20/Aaron-Swartz</id>
        <content type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/taizilongxu/taizilongxu.github.io/master/img/Aaron_Swartz_at_Boston_Wikipedia_Meetup,_2009-08-18.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;相信你应该真的每时每刻都问自己，现在这世界有什么最重要的事是我能参与去做的？如果你没在做那最重要的事，那又是为什么？&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title>数据挖掘笔记</title>
        <link href="http://hackerxu.com/2014/09/16/datamining1.html"/>
        <updated>2014-09-16T00:00:00+08:00</updated>
        <id>http://hackerxu.com/2014/09/16/datamining1</id>
        <content type="html">&lt;h2&gt;Data Preprocessing(数据预处理)&lt;/h2&gt;

&lt;p&gt;定期更新中~&lt;/p&gt;

&lt;h3&gt;1 Why preprocess the data?(数据预处理的必要性）&lt;/h3&gt;

&lt;p&gt;要进行数据挖掘需要把数据进行预处理,最简单的原因就是如果提供了完整干净的数据集,那么在数据挖掘的过程中就不用考虑这些东西了,所以很有必要.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;不完整(缺少属性值)&lt;/li&gt;
&lt;li&gt;含噪音(错误的值或者偏离太大的值)&lt;/li&gt;
&lt;li&gt;不一致(比如字符串和整数相混)&lt;/li&gt;
&lt;li&gt;重复的(一个人对应几个名字)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;把大象装冰箱总共分四部:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;数据清理(Data cleaning): 可以去掉数据中的噪声，纠正不一致&lt;/li&gt;
&lt;li&gt;数据集成(Data integration): 将多个数据源合并成一致的数据存储，构成一个完整的数据集，如数据仓库或数据立方体&lt;/li&gt;
&lt;li&gt;数据变换(Data transformation): 将一种格式的数据转换为另一格式的数据(如规范化)&lt;/li&gt;
&lt;li&gt;数据归约(Data reduction): 可以通过聚集、删除冗余特性或聚类等方法来压缩数据&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;如下图所示:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/taizilongxu/taizilongxu.github.io/master/img/2014-09-17%2016:52:40%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;h3&gt;2 Descriptive Date Summarization(描述性数据汇总)&lt;/h3&gt;

&lt;p&gt;这些东西可以更加直观的观测数据,更好的理解数据&lt;/p&gt;

&lt;h4&gt;Measuring the Central Tendency（度量数据的中心趋势）&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;mean(几何平均数)&lt;/li&gt;
&lt;li&gt;median(中值)&lt;/li&gt;
&lt;li&gt;mode(众数): 出现最多的一个数&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这里有一个经验公式:&lt;/p&gt;

&lt;p&gt;$$ mean - mode = 3 * (mean - median) $$&lt;/p&gt;

&lt;p&gt;条件是单峰的情况下,并且是asymmetrical类型(倾斜的数据)&lt;/p&gt;

&lt;h4&gt;Measuring the Dispersion of Data(度量数据的离散程度)&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Quartiles, outliers and boxplots（四分位数、离散点和盒图）

&lt;ul&gt;
&lt;li&gt;Inter-quartile range: IQR = Q3 – Q1;(Q1(25%),Q3(75%))&lt;/li&gt;
&lt;li&gt;Five number summary: min, Q1, M, Q3, max&lt;/li&gt;
&lt;li&gt;Boxplot(盒图):招不开了,见下&lt;/li&gt;
&lt;li&gt;Outlier: usually, a value higher/lower than 1.5 x IQR&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Variance and standard deviation (sample: s, population: σ)（方差和标准差）&lt;/li&gt;
&lt;li&gt;Properties of Normal Distribution Curve(正态分布特性)&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;Graphic Displays of Basic Statistical Descriptions(描述数据的基本图形)&lt;/h4&gt;

&lt;p&gt;Boxplot(盒图)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Data is represented with a box(一个盒子来表示)&lt;/li&gt;
&lt;li&gt;The ends of the box are at the first and third quartiles, i.e., the height of the box is IRQ(上下边界分别是四分位点,即Q1和Q3,高度就是IRQ的高度了)&lt;/li&gt;
&lt;li&gt;The median is marked by a line within the box(中值在盒子里用一个线表示)&lt;/li&gt;
&lt;li&gt;Whiskers: two lines outside the box extend to Minimum and Maximum(盒子外两条线延伸到最大最小值)&lt;/li&gt;
&lt;li&gt;whiskers(上面两条线)长度不会大于1.5 * IRQ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;来感受下:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/taizilongxu/taizilongxu.github.io/master/img/Cpb7Fx.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Histogram Analysis(直方图)&lt;/p&gt;

&lt;p&gt;Quantile Plot(分位数图)&lt;/p&gt;

&lt;p&gt;Quantile-Quantile (Q-Q) Plot()(Q-Q图,横纵坐标都为分位数)&lt;/p&gt;

&lt;p&gt;Scatter plot（散点图）&lt;/p&gt;

&lt;p&gt;Loess (local regression) curve(回归曲线?): add a smooth curve to a scatter plot to provide better perception of the pattern of dependence&lt;/p&gt;

&lt;h3&gt;3 Data Cleaning&lt;/h3&gt;

&lt;p&gt;数据清理分以下几步:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;填充空缺的值&lt;/li&gt;
&lt;li&gt;识别孤立点&lt;/li&gt;
&lt;li&gt;消除噪声&lt;/li&gt;
&lt;li&gt;纠正数据中的不一致&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;Missing Values(空缺数据)&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;忽略该元组(最常用的)&lt;/li&gt;
&lt;li&gt;人工填写空缺值: 量太大!&lt;/li&gt;
&lt;li&gt;使用一个全局常量填充空缺值: 将空缺的属性值用同一个常数(如“Unknown”或)替换。如果空缺值都用“Unknown”替换，当空缺值较多时。挖掘程序可能误以为它们形成了一个有趣的概念，因为它们都具有相同的值——“Unknown”。因此，尽管该方法简单，我们并不推荐它。&lt;/li&gt;
&lt;li&gt;使用属性的平均值填充空缺值&lt;/li&gt;
&lt;li&gt;利用同类别均值填补遗漏数据: 例如，如果将顾客按credit risk分类， 则用具有相同信用度的顾客的平均收入替换income中的缺值&lt;/li&gt;
&lt;li&gt;使用最可能的值填充空缺值:可以利用回归、贝叶斯计算公式或判定树归纳确定，推断出该条记录特定属性最大可能的取值。例如，利用数据集中其他顾客的属性，可以构造一棵判定树，来预测income的空缺值。&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;Noisy Data&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;binning(分箱)&lt;/strong&gt;: 分箱方法通过考察“邻居”(即周围的值)来平滑存储数据的值。存储的值被分布到一些“桶”或箱中。由于分箱方法参考相邻的值，因此它进行局部平滑。这里平滑方法又分了3种

&lt;ul&gt;
&lt;li&gt;按箱平均值平滑&lt;/li&gt;
&lt;li&gt;按箱中值平滑&lt;/li&gt;
&lt;li&gt;按箱边界平滑&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;clustering(聚类)&lt;/strong&gt;: 通过聚类分析可以检测孤立点，聚类将类似的值组织成群或“聚类”。直观地看，落在聚类集合之外的值被视为孤立点,这个方法在机器学习里有过了解.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;regression(回归)&lt;/strong&gt;: 以利用拟合函数(如回归函数)来平滑数据。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;4 Data Integration(数据集成)&lt;/h3&gt;

&lt;p&gt;它需要统一原始数据中的所有矛盾之处，如字段的:同名异义、异名同义、单位不统一,字长不一致，从而把原始数据在最低层上加以转换，提炼和集成。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;模式集成&lt;/strong&gt;: 通常，数据库和数据仓库有元数据——关于数据的数据。这种元数据可以帮助避免模式集成中的错误。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;冗余问题&lt;/strong&gt;: 可以用概率的方法算出两个数据是相关还是独立,这种分析可以度量一个属性能在多大程度上蕴含另一个.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据值冲突的检测与处理&lt;/strong&gt;:

&lt;ul&gt;
&lt;li&gt;表示不同导致数据冲突&lt;/li&gt;
&lt;li&gt;语义不同导致数据冲突&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;对于现实世界的同一实体，来自不同数据源的属性值可能不同。这可能是因为表示、比例或编码不同。例如，重量属性可能在一个系统中以公制单位存放，而在另一个系统中以英制单位存放。不同旅馆的价格不仅可能涉及不同的货币，而且可能涉及不同的服务(如免费早餐)和税。数据这种语义上的异种性，是数据集成的巨大挑战。&lt;/p&gt;

&lt;p&gt;将多个数据源中的数据集成起来，能够减少或避免结果数据集中数据的冗余和不一致性。这有助于提高其后挖掘的精度和速度。另外，在数据集成中还应考虑数据类型的选择问题，如在值域范围内应尽量用tinyint代替int, 可大大减少字节数，对于大规模数据集来说将会大大减少系统开销。&lt;/p&gt;

&lt;h3&gt;5 Data Transformation(数据变换)&lt;/h3&gt;

&lt;p&gt;数据变换将数据转换成适合于挖掘的形式。主要是找到数据的特征表示，对数据进行规格化处理。用维变换或转换方式减少有效变量的数目或找到数据的不变式.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;smoothing(平滑)&lt;/strong&gt;: 去掉数据中的噪声。这种技术包括分箱（Bin)、聚类和回归。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Aggregation(聚集)&lt;/strong&gt;:对数据进行汇总和聚集例如，可以聚集日销售数据，计算月和年销售额。这一步用来为多粒度数据分析构造数据立方体。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Generalization(概化)&lt;/strong&gt;:使用概念分层，用高层次概念替换低层次“原始”数据。例如，分类的属性，如street，可以概化为较高层的概念，如city或country.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Normalization(规范化)&lt;/strong&gt;: 将属性数据按比例缩放，使之落入一个小的特定区间，如-1．0到1．0或0.0到1.0。规格化的目的是将一个属性取值范围影射到一个特定范围之内，以消除数值性属性因大小不一而造成挖掘结果的偏差.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Attribute construction属性构造或特征构造&lt;/strong&gt;: 可以利用已知的属性构造新的属性并添加到属性集中，以帮助挖掘过程。(由长，宽求面积)&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;7 Data Reduction(数据规约)&lt;/h3&gt;

&lt;p&gt;主要以下步骤:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;数据立方合计&lt;/li&gt;
&lt;li&gt;维数削减&lt;/li&gt;
&lt;li&gt;数据压缩&lt;/li&gt;
&lt;li&gt;数据块消减&lt;/li&gt;
&lt;li&gt;离散化与概念层次生成&lt;/li&gt;
&lt;/ol&gt;
</content>
    </entry>
    
    <entry>
        <title>Atom编辑器</title>
        <link href="http://hackerxu.com/2014/09/16/atom-setting.html"/>
        <updated>2014-09-16T00:00:00+08:00</updated>
        <id>http://hackerxu.com/2014/09/16/atom-setting</id>
        <content type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/taizilongxu/taizilongxu.github.io/master/img/2014-09-17%2019:21:54%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;最近在用atom编辑器,github出的东西想想怎么都不该差的,不过atom可能正处于一个刚开始起步的阶段,许多功能还没有被完善,发现了许多欠缺和不妥的地方&lt;/p&gt;

&lt;p&gt;缺点:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;运行相比sublime慢.sublime是用c++写的,而atom运行在庞大冗余的V8内核之上&lt;/li&gt;
&lt;li&gt;没有上一次文件夹保存功能.每次我打开atom都得重新寻找项目路径,不知道是不是我打开的方式不对.&lt;/li&gt;
&lt;li&gt;插件不全.刚起步atom的插件数量明显比不过sublime之类啊&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;优点:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;作为一个github强推的核心编辑器,必然与github有深度的整合,这方面无人能比,修改,增添文件都在侧边栏可以高亮显示(这个再sublime上没有找到),文件中边框也显示哪行修改,删除或者新加(虽然sublime和vim都有这个功能),这也是我喜欢atom的主要原因之一&lt;/li&gt;
&lt;li&gt;插件一键安装.的确atom提供的不是一个编辑器,而是一个线上的服务,更新插件so easy&lt;/li&gt;
&lt;li&gt;因为atom是基于chrome的V8的,所以全平台支持,而且插件都是用coffeescript编写,方便开发者&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;作为一个非前端coder,感觉还是够用了,自己虽然是一个vimer,但是涉及到前端的东西感觉还得是atom,sublime之类的编辑器更方便点(代码看得更舒服).&lt;/p&gt;

&lt;p&gt;试用的几个插件:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://atom.io/packages/atom-beautify&quot;&gt;atom-beautify&lt;/a&gt;:美化丑陋的代码~&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://atom.io/packages/git-plus&quot;&gt;git-plus&lt;/a&gt;:git操作&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://atom.io/packages/color-picker&quot;&gt;color-picker&lt;/a&gt;:获取颜色的插件,右键直接打开一个颜色值进行调整&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://atom.io/packages/markdown-preview&quot;&gt;Markdown Preview package&lt;/a&gt;:预览markdown插件&lt;code&gt;ctrl + shift +m&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://atom.io/packages/sort-lines&quot;&gt;sort-lines&lt;/a&gt;:一个给文本单词排序的插件&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://atom.io/packages/bracket-matcher&quot;&gt;Bracket Matcher package &lt;/a&gt;:括号匹配插件,&lt;code&gt;ctrl + m&lt;/code&gt;跳转匹配括号,好像linux不太好使~&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;&quot;&gt;Tree View package&lt;/a&gt;:自带插件,&lt;code&gt;ctrl + \&lt;/code&gt; 打开 , &lt;code&gt;ctrl + 0&lt;/code&gt; 选中树形图, &lt;code&gt;a,m,delete&lt;/code&gt; 分别为增加,移动和删除&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://atom.io/packages/fuzzy-finder&quot;&gt;fuzzy-finder&lt;/a&gt;: &lt;code&gt;ctrl+t&lt;/code&gt; 打开快速查找项目中的文件&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://atom.io/packages/git-log&quot;&gt;gitlog&lt;/a&gt;:查看git日志&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title>Captain,my captain!</title>
        <link href="http://hackerxu.com/2014/09/13/luobin.html"/>
        <updated>2014-09-13T00:00:00+08:00</updated>
        <id>http://hackerxu.com/2014/09/13/luobin</id>
        <content type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/taizilongxu/taizilongxu.github.io/master/img/movie/luobin2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;我每天到你家接你，我们出去喝酒笑闹，那很棒是我一天中最棒的时刻，只有十秒，从停车到你家门口，每次我敲门，都希望你不在了，不说再见，什么都没有，你就走了，我懂得不多，但我很清楚。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/taizilongxu/taizilongxu.github.io/master/img/movie/luobin.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;选择和别人不一样的路走的人,虽然会感觉孤独甚至会招致歧视,但并不意味着那就是过错——相反,一个真正的英雄往往会选择一条很少人会走的路.大多数的人都在平静的绝望着.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title>京东评论,价格排序</title>
        <link href="http://hackerxu.com/2014/09/09/scrapy-jd2.html"/>
        <updated>2014-09-09T00:00:00+08:00</updated>
        <id>http://hackerxu.com/2014/09/09/scrapy-jd2</id>
        <content type="html">&lt;p&gt;由于爬取有用东西太少,只能看看这些了,一共是314476个商品&lt;/p&gt;

&lt;p&gt;从早上8点多开始的,爬了7,8个小时吧,爬取结果&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/taizilongxu/scrapy_jingdong/master/img.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;评论数前一百,依次对应评论数,价格,商品ID和名字&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;617871  20  199069   川宇（kawau）蝴蝶Micro SD/T-Flash 读卡器（颜色随机） 
543594  46.9    253393   金士顿（Kingston） DataTraveler 101 G2 16GB U盘 黑色 
543590  399 839799   金士顿（Kingston） DataTraveler 101 G2 128GB U盘 白色 
543583  169 647968   金士顿（Kingston） DataTraveler 101 G2 64GB U盘 绿色 
540933  85.9    253392   金士顿（Kingston） DataTraveler 101 G2 32GB U盘 紫色 
540933  29.9    253394   金士顿（Kingston） DataTraveler 101 G2 8GB U盘 红色  
475822  26.9    136363   金士顿（Kingston）8G Class4 TF（micro SD）存储卡 
438666  189 548501   好奇（Huggies）银装干爽舒适纸尿裤 大号L128片【10-14kg】 
438665  189 548503   好奇（Huggies）银装干爽舒适纸尿裤 加大号XL104片【12-16kg】 
438659  149 1092029  好奇（Huggies） 纸尿裤 银装干爽箱装S小号 148片 
438656  189 548500   好奇（Huggies）银装干爽舒适纸尿裤 中号M160片【7-11kg】 
389582  129 121707   TP-LINK TL-WR841N  300M无线路由器（蓝色） 
361967  89  200577   TP-LINK TL-WR740N  150M无线路由器 
357849  229 695467   帮宝适（Pampers）超薄干爽纸尿裤 大号L164片【9-14kg】 
357846  239 695469   帮宝适（Pampers）超薄干爽纸尿裤 加大号XL128片【12-17kg】 
357839  235 695466   帮宝适（Pampers）超薄干爽纸尿裤 中号M192片【6-11kg】 
357814  160 1163863  帮宝适（Pampers）超薄干爽纸尿裤小号S152片【3-8kg】 
335395  89  836677   TP-LINK TL-WR842N 300M无线路由器 
332122  69  405074   罗技（Logitech）M185 无线鼠标 黑色红边 
332122  69  423478   罗技（Logitech）M185 无线鼠标 黑色灰边 
332120  69  405075   罗技（Logitech）M185 无线鼠标 黑色蓝边 
330464  19.9    971035   360官方出品 360随身WiFi 2 （设置超简单，超便捷的无线路由器）  白色 
316100  19.9    981285   360官方出品 360随身WiFi 2 （设置超简单，超便捷的无线路由器）  黑色 
308863  59  409740   飞科（FLYCO）FS330充电式三刀头电动剃须刀（银色） 
293032  789 931828   西部数据（WD） My Passport  Ultra USB3.0 2TB 超便携移动硬盘 （黑色）WDBMWV0020BBK-PESN 
293029  469 931833   西部数据（WD） My Passport  Ultra USB3.0 1TB 超便携移动硬盘 （红色）WDBZFP0010BRD-PESN 
293029  399 931824   西部数据（WD） My Passport  Ultra USB3.0 500G 超便携移动硬盘 （蓝色）WDBPGC5000ABL-PESN 
293028  779 931822   西部数据（WD） My Passport  Ultra USB3.0 2TB 超便携移动硬盘 （钛）WDBMWV0020BTT-PESN 
293028  399 931823   西部数据（WD） My Passport  Ultra USB3.0 500G 超便携移动硬盘 （黑色）WDBPGC5000ABK-PESN 
293027  469 931831   西部数据（WD） My Passport  Ultra USB3.0 1TB 超便携移动硬盘 （黑色）WDBZFP0010BBK-PESN 
293026  469 1099488  西部数据（WD） My Passport Ultra USB3.0 1TB 超便携移动硬盘 白色 WDBZFP0010BWT-PESN 
293025  449 896813   西部数据（WD） Elements 新元素系列 2.5英寸 USB3.0 移动硬盘 1TB（WDBUZG0010BBK） 
293023  349 896815   西部数据（WD） Elements 新元素系列 2.5英寸 USB3.0 移动硬盘 500G（WDBUZG5000ABK） 
293021  479 931832   西部数据（WD） My Passport  Ultra USB3.0 1TB 超便携移动硬盘 （蓝色）WDBZFP0010BBL-PESN 
293015  399 931825   西部数据（WD） My Passport  Ultra USB3.0 500G 超便携移动硬盘 （红色）WDBPGC5000ARD-PESN 
293010  749 896814   西部数据（WD） Elements 新元素系列 2.5英寸 USB3.0 移动硬盘 2TB（WDBU6Y0020BBK） 
293009  1599    1018798  西部数据(WD) My Cloud 4TB NAS 网络存储 个人云存储 WDBCTL0040HWT-CESN  
293007  1049    1018801   西部数据(WD) My Cloud 2TB NAS 网络存储 个人云存储 WDBCTL0020HWT-CESN  
293006  479 931827   西部数据（WD） My Passport  Ultra USB3.0 1TB 超便携移动硬盘 （钛）WDBZFP0010BTT-PESN 
293004  789 1164790  西部数据（WD） My Passport  Ultra USB3.0 2TB 超便携移动硬盘 （白色）WDBMWV0020BWT 
293004  779 931829   西部数据（WD） My Passport  Ultra USB3.0 2TB 超便携移动硬盘 （蓝色）WDBMWV0020BBL-PESN 
293003  999 1034206  西部数据（WD） My Passport Air USB3.0 1TB 全金属超便携移动硬盘 WDBWDG0010BAL-PESN 
293001  399 931826   西部数据（Western Digital） My Passport  Ultra USB3.0 500G 超便携移动硬盘 （钛）WDBPGC5000ATT-PESN 
293000  699 989331   西部数据（WD） My Passport Slim USB3.0 1TB 超便携移动硬盘 WDBGMT0010BAL-PESN 
292994  999 989324   西部数据（WD） My Passport Slim USB3.0 2TB 超便携移动硬盘 WDBPDZ0020BAL-PESN 
292994  1249    1018797  西部数据(WD) My Cloud 3TB NAS 网络存储 个人云存储 WDBCTL0030HWT-CESN   
290507  25.9    503213   闪迪（SanDisk）酷刃 (CZ50) 8GB U盘 黑红 
290502  39.9    503220   闪迪（SanDisk）酷刃 (CZ50) 16GB U盘 黑红 
290498  139 850144   闪迪（SanDisk） 酷刃（CZ50） 64GB U盘 黑红 
290497  89  519932   闪迪（SanDisk）酷刃 CZ50 32GB U盘 黑红 
271524  160 923050   好奇（Huggies）金装超柔贴身纸尿裤 小号S120片【4-8kg】 
271524  303 351202   好奇（Huggies）金装超柔贴身纸尿裤 加大号XL105片【12-16kg】
271519  299 351201   好奇（Huggies）金装超柔贴身纸尿裤 大号L129片【10-14kg】 
271515  299 351200   好奇（Huggies）金装超柔贴身纸尿裤 中号M162片【7-11kg】 
246430  399 888104   希捷（Seagate）2.5英寸 睿利slim 超薄便携式 500GB USB3.0移动硬盘 银色 (STCD500303) 
246429  479 1000431  希捷（Seagate） Backup Plus睿品（升级版）1T 2.5英寸 USB3.0移动硬盘 丝绸红(STDR1000303) 
246426  779 1021901  希捷（Seagate） Backup Plus睿品（升级版） 2T 2.5英寸 USB3.0移动硬盘 钛金灰(STDR2000301) 
246426  599 667754   希捷（Seagate）Expansion 新睿翼2TB 3.5英寸 USB3.0 桌面式硬盘 (STBV2000300)  
246426  859 1061254  希捷（Seagate） （新一代） 睿品 3T 3.5寸桌面式外置硬盘 (STDT3000300) 
246426  1799    1152893  希捷（Seagate）Expansion新睿翼 5TB 3.5英寸 USB3.0桌面式硬盘 黑色（STBV5000300） 
246426  498 980167   希捷（Seagate） 2.5英寸 睿利slim （苹果版） 500GB USB3.0移动硬盘 银色(STCF500300) 
246424  779 1021900  希捷（Seagate） Backup Plus睿品（升级版） 2T 2.5英寸 USB3.0移动硬盘 蓝色 (STDR2000302) 
246421  519 1093813  希捷（Seagate）Expansion 新睿翼1.5TB 2.5英寸 USB3.0 移动硬盘 (STBX1500401) 
246420  779 1021894  希捷（Seagate） Backup Plus睿品（升级版） 2T 2.5英寸 USB3.0移动硬盘 陨石黑(STDR2000300) 
246418  479 1000459  希捷（Seagate） Backup Plus睿品（升级版） 1T 2.5英寸 USB3.0移动硬盘 陨石黑(STDR1000300) 
246418  799 667747   希捷（Seagate）Expansion 新睿翼3TB 3.5英寸 USB3.0 桌面式硬盘 (STBV3000300)  
246418  659 1061252  希捷（Seagate） （新一代） 睿品 2T 3.5寸桌面式外置硬盘 (STDT2000300) 
246414  1999    1074396  希捷（Seagate） 睿品 4T 2.5英寸高速便携式移动硬盘 黑色 (STDA4000300) 
246413  479 1000468  希捷（Seagate） Backup Plus睿品（升级版） 1T 2.5英寸 USB3.0移动硬盘 宝石蓝(STDR1000302) 
246413  1199    875234   希捷（Seagate） 无线硬盘移动存储设备 1TB USB3.0移动硬盘 灰色 (STCK1000300) 
246412  439 667762   希捷（Seagate）Expansion 新睿翼1TB 2.5英寸 USB3.0 移动硬盘 (STBX1000301) 
246411  349 667779   希捷（Seagate）Expansion 新睿翼500G 2.5英寸 USB3.0 移动硬盘 (STBX500300) 
246410  739 1080708  希捷（Seagate） Expansion 新睿翼2TB 2.5英寸 USB3.0 移动硬盘 (STBX2000401) 
246408  479 1000467  希捷（Seagate） Backup Plus睿品（升级版） 1T 2.5英寸 USB3.0移动硬盘 皓月银(STDR1000301)     
246408  399 888106   希捷（Seagate）2.5英寸 睿利slim 超薄便携式 500GB USB3.0移动硬盘 黑色 (STCD500301) 
246407  779 1021895  希捷（Seagate） Backup Plus睿品（升级版） 2T 2.5英寸 USB3.0移动硬盘 丝绸红(STDR2000303) 
246407  1199    1061260  希捷（Seagate） （新一代） 睿品 4T 3.5寸桌面式外置硬盘 (STDT4000300) 
246401  1499    1020848  希捷（Seagate） Central智汇盒 4TB NAS 网络存储 个人云存储（STCG4000300） 
246401  999 1020849  希捷（Seagate） Central智汇盒 2TB NAS 网络存储 个人云存储（STCG2000300） 
246398  1099    952606   希捷（Seagate）Expansion 新睿翼 4TB 3.5英寸 USB3.0桌面式硬盘 黑色 (STBV4000300) 
246398  1899    1108829  希捷（Seagate） （新一代） 睿品 5T 3.5寸桌面式外置硬盘 (STDT5000300) 
246397  698 980202   希捷（Seagate） Backup Plus 新睿品 （苹果版）1TB 2.5英寸 USB3.0 移动硬盘（STBW1000303） 
245860  26.9    573333   东芝（TOSHIBA）隼系列（UHYBS-008G-LB） U盘 8G（浅蓝色） 
245859  38.9    501463   东芝（TOSHIBA）隼系列（THUHYBS-016G）U盘 16G 
245857  39.9    877117   东芝（TOSHIBA） 隼系列（UHYBS-016G-LB）U盘 16G 浅蓝色 
245856  25.9    500247   东芝（TOSHIBA）隼系列（THUHYBS-008G）U盘 8G（白色） 
245854  169 543120   东芝（TOSHIBA）隼系列（UHYBS-64G）U盘 64G 
245853  39.9    877119   东芝（TOSHIBA） 隼系列（UHYBS-016G-BL）U盘 16G 蓝色 
245852  77.9    512413   东芝（TOSHIBA）隼系列（THUHYBS-032G）U盘 32G 
245847  39.9    877116   东芝（TOSHIBA） 隼系列（UHYBS-016G-OR）U盘 16G 橙色 
245840  26.9    877120   东芝（TOSHIBA） 隼系列（UHYBS-008G-OR）U盘 8G 橙色 
236025  26.9    520139   闪迪（SanDisk）MicroSDHC（TF）存储卡 8G-Class4 
229932  47  368907   水星（Mercury）MW300R  300M无线路由器 
226624  45.9    340843   金士顿（Kingston）16G Class10 -45MB/S TF(Micro SD)存储卡 
226225  59  1023954  倍斯特 BST-0137格兰木 移动电源/充电宝 10400毫安 白色 
226166  89  1075438  倍斯特 BST-0137格兰木 移动电源/充电宝 12000毫安 白色 
209806  22.8    248983   亨氏 Heinz胡萝卜营养米粉225g(辅食添加初期至36个月适用) 
209806  22.8    248998   亨氏 Heinz强化铁锌钙营养奶米粉225g(辅食添加初期至36个月适用) 
209805  19.8    248985   亨氏 Heinz淮山薏米营养米粉225g(辅食添加初期至36个月适用) 
209801  22.8    249030   亨氏 Heinz鳕鱼苹果营养米粉225g(6至36个月适用) 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;价格前一百&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;0   99999999    1006452157   钻宝源  GIA证书 10克拉粉钻 钻石女戒/结婚钻戒 稀世之宝 
0   29999999    1006217061   钻宝源12克拉IF级D色3EX切工无荧光GIA证书钻石戒指女戒结婚钻戒钻宝源之星 
0   29999999    1008175234   钻宝源 顶级品鉴 GIA梨形3.25克拉IF净度 浓彩级粉紫钻 
0   12000000    1008175842   钻宝源 GIA裸钻20.65克拉垫形艳彩级黄钻 赠铂金戒托 
0   9880000 1022744553   圣博大珠宝 18K金镶嵌满绿精品翡翠观音吊坠 
0   4950000 1022744179   圣博大珠宝 玻璃种精品翡翠观音吊坠a货 天然翡翠玉石观音挂件男款 
0   3120000 1022740394   圣博大珠宝 精品满绿老坑翡翠竹节吊坠天然a货 
0   2418000 1022316984   圣博大珠宝 18K镶钻冰种满绿精品翡翠观音吊坠a货 天然玉石观音挂件正品 
0   1590000 1035901016   御府新疆和田玉黄皮籽玉茶壶摆件 
0   1399999 1034840948   御府 新疆和田玉黄皮白玉籽玉摆件 观音 1700克 
0   1399999 1033314976   御府 新疆和田玉洒金皮白玉籽玉摆件 双娇 2000克 
0   1300000 1033244698   御府新疆和田玉枣红皮白玉籽玉路路通摆件 
0   1158000 1022739928   圣博大珠宝 精品翡翠飘花如意吊坠a货 天然玉石挂件 
0   980000  1015644878   老山玉器 新疆和田玉石玉器 和田羊脂玉摆件黄鹤楼（附鉴定证书） 
0   780000  1022739750   圣博大珠宝 精品满绿翡翠竹节吊坠a货 18K金钻石镶嵌玉石节节高挂件 节节高 
0   599999  1003156111   戴维尼钻石 3克拉G色VS净度 GIA证书 定制克拉钻戒 送戒托 
0   590000  1034848946   御府 新疆和田玉黄皮白玉籽玉观音摆件 416克 
0   539800  1027283150   爱卓龙 翡翠戒面玻璃种满翠戒指面 
10  500000  1054890274   鑫万福  GIA定制 南非天然裸钻/钻石/钻戒DIY个性专属定制 求婚戒指 婚戒 百万裸钻请看页面详情 
0   420000  1021909191   玉品世家 纯天然A货翡翠 中华魂—翡翠九龙玉雕 孤品 
0   380000  1015645746   老山玉器 新疆和田玉石玉器 和田白玉摆件乘兴而来（附鉴定证书） 
0   360000  1268843783   红木家具 老挝红酸枝清式草龙宝座 客厅沙发 JH-G-025 
0   360000  1015643839   老山玉器 新疆和田玉石玉器 和田白玉摆件莲藕童子（附鉴定证书） 
0   338999  1067901  IBM Storwize V7000   网络存储   双控制器高端存储   自带虚拟化等功能 
0   287294  1096185  EMC VNXe3150(3150_2SP_6_3TB)统一存储系统 
0   280000  1135720576   寿山乌鸦皮 田黄石 《刘海戏蟾》摆件 精品收藏 
0   269067  1096192  EMC VNXe3150(3150_2SP_6_2TB)统一存储系统 
0   268000  1015646939   老山玉器 新疆和田玉石玉器 和田白玉摆件雄鹰展翅（附鉴定证书） 
0   262000  1015838459   老山玉器 新疆和田玉石玉器 和田羊脂白玉籽料牌府上有龙（附鉴定证书） 
3   255350  1252562309   在一起珠宝  投资产品 Au9999 梯形金条 黄金投资理财 收藏保值支持回购 大克重金条 1000g 
0   250106  1096196  EMC VNXe3150(3150_2SP_6_600GB_15k)统一存储系统 
2   250000  1274141102   lika 高端金条 好大气的金条 巧克力味哦 
0   250000  1056033435   永乐大典：宣纸影印（北京图书馆出版、全164册） 
0   240000  11206386     钦定武英殿聚珍版丛书（精装合订本） 
0   235437  1096197  EMC VNXe3150(3150_1SP_6_3TB)统一存储系统 
0   209999  779369   未来人类（Terrans Force）P57 17.3英寸游戏本(六核i7-4960X 32G 1.8TB SSD 双GTX780M SLI 2X4G独显) 
0   198523  1096205  EMC VNXe3150(3150_1SP_6_2TB)统一存储系统 
0   196917  1096198  EMC VNXe3150(3150_1SP_6_600GB_15K)统一存储系统 
0   192407  1003434981   颜博钻石 2克拉G色VVS1级 GIA公主方形裸钻 可定制异形钻戒 独特婚戒 
0   180000  1125459777   【西泠印社】刘一闻刻 寿山石《不似之似 》 闲章 印章藏书章 
0   168000  1015645288   老山玉器 新疆和田玉石玉器 和田白玉摆件虎虎生威（附鉴定证书） 
0   158888  1011339885   钻宝源南 非GIA裸钻1克拉IFD色3EX切工无荧光钻石女戒钻戒铂金PT900戒托二选 
0   156999  1067900  IBM Storwize V5000    网络存储   双控制器中高端存储，双系统群集 内部存储的虚拟化 单向数据迁移等功能 
0   148920  1096176  DCN NCS3600（NCS3600-FD）功能强大，绿色高效的网络控制器存储系统 
0   148000  1015165186   老山玉器 新疆和田玉石玉器 白玉籽料手把件手玩件福寿双全（附鉴定证书） 
0   144936  11211825     民国史料丛刊（续编）（全1140册，附总目提要） 
17  139999  1285517458   钻宝源 50分I克拉H色 DE色FG色3EX切工天然南非裸钻GIA双证钻石女戒指 婚戒 2克拉H色SI/VG切工 
0   131760  11211824     民国史料丛刊（全1128册） 
0   130000  1126803182   【西泠印社】昌化鸡血石 素章 方章 篆刻刻字 收藏礼品 
0   128600  1058077255   老山玉器 新疆天然玉石玉器 碧玉佛珠 质地细腻油润 112颗玉珠（附鉴定证书） 
3   127700  1252562308   在一起珠宝  投资产品 Au9999 梯形金条 黄金投资理财 收藏保值支持回购 大克重金条 500g 
0   123267  1096179  DCN NCS3600（NCS3600-ID）功能强大，绿色高效的网络控制器存储系统 
0   120000  1138676585   【西泠印社】余正刻 寿山石《白云抱幽石》 闲章 印章藏书章 
0   111888  1011334676   钻宝源 1克拉H色 SI 南非天然裸钻GIA双证 送18K白金戒托（钻石女戒/结婚） 
0   110400  1022560027   翡翠A货 缅甸翡翠 翡翠吊坠 虾挂件 手工雕刻 金世玉 
0   110000  1146704643   【西泠印社】副社长韩天衡 行书 《荷说一则》二平尺 书法 字画 
0   107900  1096170  DCN NCS3600（NCS3600-FS）功能强大，绿色高效的网络控制器存储系统 
0   100000  1146715834   【西泠印社】余正刻 寿山石《 宽柔和惠，则众相爱 》 闲章 印章藏书章 
0   100000  1126783239   【西泠印社】 寿山石 刘海戏蟾 摆件 摆设 装饰 
0   98800   1012898549   老山玉器 新疆和田玉 和田玉白玉把件手玩件寿星（附鉴定证书） 
0   98000   1015550827   老山玉器 新疆和田玉石玉器 羊脂玉手把件手玩件天伦之乐（附鉴定证书） 
0   92800   1014428878   老山玉器 新疆和田玉石玉器 白玉手把件 一品清廉 正面浮雕莲花（附鉴定书） 
6   90000   1266299063   美立方 结婚礼物千足金鱼金条 年年有余金条 AU999千足金砖投资金条 300克 
0   88000   1015034420   老山玉器 新疆和田玉石玉器 白玉籽料把件手玩件连年有余（附鉴定证书） 
0   88000   1015895333   老山玉器 新疆和田玉石玉器 白玉摆件五鼠送财（附鉴定证书） 
0   88000   1015924030   老山玉器 新疆和田玉石玉器 墨玉籽料四季发财印章（附鉴定证书） 
0   88000   1015574789   老山玉器 新疆和田玉石玉器 和田玉手把件手玩件喜事连连（附鉴定证书） 
17  86666   1285517457   钻宝源 50分I克拉H色 DE色FG色3EX切工天然南非裸钻GIA双证钻石女戒指 婚戒 2克拉IJ色SI/VG切工 
3   86666   1006148479   钻宝源 南非天然GIA裸钻2克拉 VG以上切工 SI I-J色（送女戒PT950戒托） 
0   86000   1015145560   老山玉器 新疆和田玉石玉器 羊脂玉籽料挂件吊坠观音（附鉴定证书） 
0   86000   1015045900   老山玉器 新疆和田玉石玉器 白玉把件手玩件马上封侯（附鉴定证书） 
0   86000   1004162  奥士达（OASTAR） Ht3.0*15 高保密超强长时涉密存储介质销毁机 2.5*15，50张，长时销毁光盘U盘移动硬盘硬盘 
0   85504   1003401122   颜博钻石 1克拉D色VS2级GIA圆形裸钻 定制婚戒钻戒吊坠(货号:140090-52) 
0   85000   1126746227   【西泠印社】 寿山石芙蓉石 童子拜寿 印石摆件 摆设 装饰 篆刻 
1   82999   1011338625   钻宝源 南非天然GIA裸钻1.2克拉VVS2 F色 3EX 钻石女戒 结婚钻戒 
0   82267   1096186  DCN NCS3600（NCS3600-IS）功能强大，绿色高效的网络控制器存储系统 
0   80000   1126911614   【西泠印社】昌化鸡血石 素章 方章 篆刻刻字 收藏礼品 
0   80000   1076008391   天龙八宝壶尊景泰蓝掐丝珐琅钱美华、米振雄、戴嘉林、钟连盛四位大师联袂创作 
0   80000   1214681556   【西泠印社】寿山石 白杜陵 收藏篆刻礼品 
0   80000   1126779753   【西泠印社】 寿山石 罗汉洗象 摆件 摆设 装饰 
0   80000   1266643644   八马茶业 福建安溪原产铁观音 陈年浓香型 茶叶 高端礼盒 1380克 
17  79999   1285517453   钻宝源 50分I克拉H色 DE色FG色3EX切工天然南非裸钻GIA双证钻石女戒指 婚戒 1.3克拉F色 3EX切工 
1   79800   1224981764   佳能（Canon） Cinema System C300机身 专业摄像机 
1   79699   1246818236   佳能（Canon） EOS 1DX+（16-35）+（24-70）+（70-200）套机 
0   78800   1059536471   《龙腾虎跃》 景泰蓝 张同禄大师之作 馈赠商务礼品 工艺摆件礼品 
0   78000   1125482760   【西泠印社】孙慰祖刻 青田石《修身事亲知人 》 闲章 印章藏书章 
17  76999   1285517452   钻宝源 50分I克拉H色 DE色FG色3EX切工天然南非裸钻GIA双证钻石女戒指 婚戒 一克拉E色VVS1/3EX切工 
0   76000   1059864504   kriti 黄皮白玉 玉料厚重老气 籽料和田玉大象摆件 吉祥如意 
17  75999   1285517456   钻宝源 50分I克拉H色 DE色FG色3EX切工天然南非裸钻GIA双证钻石女戒指 婚戒 1.5克拉H色SI1/VG切工 
0   74948   1004345572   颜博钻石 1克拉G色VVS1级GIA圆形裸钻 可定制婚戒钻戒(货号:141010-397) 
0   73606   1004487727   颜博钻石 1.7克拉J色SI2级GIA圆形裸钻 可定制婚戒钻戒货号:140091-159) 
0   72800   1012901671   老山玉器 和田玉 和田羊脂玉原料（附鉴定证书） 
0   70000   1130131483   【西泠印社】昌化鸡血石 素章 方章 篆刻刻字 收藏礼品 
0   68888   1044705  宝马（BMW） X5,X6原厂车轮组 铝合金车轮(21英寸) 镀铬的星式轮辐128*(一套4只含原厂邓禄普轮胎) 
0   68800   1059727976   老山玉器 新疆天然玉石玉器 籽料摆件 俏丽的皮色包裹玉质（附鉴定证书） 
0   68800   1003989303   地球城钻石1.01克拉 H VS1 3EX N GIA裸钻婚戒含18K金戒托 A款直臂雪花款戒指 
0   68800   1003989306   地球城钻石1.01克拉 H VS1 3EX N GIA裸钻婚戒含18K金戒托 D款六爪皇冠戒指 
0   68800   1003989305   地球城钻石1.01克拉 H VS1 3EX N GIA裸钻婚戒含18K金戒托 C款天使之吻戒指 
0   68800   1003989304   地球城钻石1.01克拉 H VS1 3EX N GIA裸钻婚戒含18K金戒托 B款扭臂雪花款戒指 
0   68600   1022560331   翡翠A货 缅甸翡翠 蟾蜍吊坠 招财辟邪 金世玉 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看看这个商品页&lt;code&gt;0 209999  779369   未来人类（Terrans Force）P57 17.3英寸游戏本(六核i7-4960X 32G 1.8TB SSD 双GTX780M SLI 2X4G独显)&lt;/code&gt;,这个笔记本的价格碉堡了,底下的商品咨询也有点碉堡了.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title>基于Scrapy的京东爬虫</title>
        <link href="http://hackerxu.com/2014/09/07/scrapy-jd.html"/>
        <updated>2014-09-07T00:00:00+08:00</updated>
        <id>http://hackerxu.com/2014/09/07/scrapy-jd</id>
        <content type="html">&lt;p&gt;出于兴趣爱好原来就做过爬虫,从C到python,再到scrapy,一开始也是因为做爬虫才慢慢了解python,才知道有这么优雅的语言,废话不多说了.看一下是怎么爬取的.&lt;/p&gt;

&lt;p&gt;前期工作做了很多,学习了twisted,scrapy.京东的网页价格,评论是动态,怎么爬?google了一大堆什么,又抓包,发现关于评论的包不能正常的抓取,可能是设的cookies认证,没深入了解这方面的知识,发觉碰到一块难题.&lt;/p&gt;

&lt;p&gt;就在昨天,偶尔浏览到了京东的wap页面,我勒个大曹啊,wap页面都是静态的,而且和网页端的内容是一致更新的,终于送了一口气,三下五除二用了两个多小时写完了这个爬虫,今天早上正好到实验室开始抓取,抽空写个blog.&lt;/p&gt;

&lt;p&gt;项目地址:&lt;a href=&quot;https://github.com/taizilongxu/scrapy_jingdong&quot;&gt;https://github.com/taizilongxu/scrapy_jingdong&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;思路&lt;/h3&gt;

&lt;p&gt;同学只要价格,商品名和评论数,所以还算简单,最后要加个商品ID,方便去重&lt;/p&gt;

&lt;h4&gt;第一个页面&lt;/h4&gt;

&lt;p&gt;京东有一个商品全部分类的页面如下 &lt;a href=&quot;http://wap.jd.com/category/all.html&quot;&gt;http://wap.jd.com/category/all.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/taizilongxu/taizilongxu.github.io/master/img/2014-09-07%2009:17:58%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;其中红色的和后面的更多指向的是一个页面,只要抓取一个就可以到下一个页面了,进入第一个邪恶的服饰内衣看看.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&amp;#39;获取全部分类商品&amp;#39;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sel&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/html/body/div[5]/div[2]/a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;text()&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;href&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;@href&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;category&amp;#39;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;http://wap.jd.com&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;
                    &lt;span class=&quot;c&quot;&gt;# print url&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse_category&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;第二个页面&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/taizilongxu/taizilongxu.github.io/master/img/2014-09-07%2009:20:42%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;这个页面就是服饰内衣的页面了,我们抓取每个页面的蓝色字体的小分类,保存进req&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse_category&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&amp;#39;获取分类页&amp;#39;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sel&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/html/body/div[5]/div/a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;href&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;@href&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;http://wap.jd.com&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;# print url&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;第三个页面&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/taizilongxu/taizilongxu.github.io/master/img/2014-09-07%2009:23:32%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;这个就是列表页面了,我们沿着这个页面可以抓取所有商品的url,要说的就是要把下一页也放到parse_list里进行循环&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&amp;#39;分别获得商品的地址和下一页地址&amp;#39;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

        &lt;span class=&quot;s&quot;&gt;&amp;#39;下一页地址&amp;#39;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;next_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/html/body/div[21]/a[1]/@href&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;http://wap.jd.com&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;s&quot;&gt;&amp;#39;商品地址&amp;#39;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sel&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/html/body/div[contains(@class, &amp;quot;pmc&amp;quot;)]/div[1]/a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;href&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;@href&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;http://wap.jd.com&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;# print url&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse_product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;第四个页面&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/taizilongxu/taizilongxu.github.io/master/img/2014-09-07%2009:25:36%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;在这里抓取title,price和id,id就是 &lt;a href=&quot;http://wap.jd.com/product/1268172347.html&quot;&gt;http://wap.jd.com/product/1268172347.html&lt;/a&gt; 最后的数字.&lt;/p&gt;

&lt;p&gt;把上面网址中的product改成comments,就可以抓取评论页了&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse_product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&amp;#39;商品页获取title,price,product_id&amp;#39;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;product&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;comments&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse_comments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;//title/text()&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/html/body/div[4]/div[4]/font/text()&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;product_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;


        &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TutorialItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;price&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;price&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;product_id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product_id&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;item&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;product_id&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;第五个页面&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/taizilongxu/taizilongxu.github.io/master/img/2014-09-07%2009:29:07%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;这个页面也没什么好说的,把好中差评论加一起就是商品总数了,然后返回item(&lt;a href=&quot;http://scrapy-chs.readthedocs.org/zh_CN/latest/topics/request-response.html#topics-request-response-ref-request-userlogin&quot;&gt;如何爬取属性在不同页面的item呢？&lt;/a&gt;scrapy里面介绍的很详细了&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse_comments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&amp;#39;获取商品comment&amp;#39;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;comment_5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/html/body/div[4]/div[2]/a[1]/font[2]/text()&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;comment_3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/html/body/div[4]/div[2]/a[2]/font/text()&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;comment_1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/html/body/div[4]/div[2]/a[3]/font/text()&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;comment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;comment_5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;comment_3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;comment_1&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;comment&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;totle_comment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;comment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;item&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;comment&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;totle_comment&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;totle_comment&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;至此整个爬虫完毕,剩下就是运行了,正在等待结果&lt;/p&gt;
</content>
    </entry>
    

</feed>
